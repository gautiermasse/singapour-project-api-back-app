package com.example.demo.Controller;


import com.example.demo.Products.Products;
import com.example.demo.Users.Users;
import com.example.demo.Users.UsersRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@org.springframework.stereotype.Controller
@RequestMapping(path = "/demo")
public class Controller {

    private static final String template = "Hello, %s!";

    @GetMapping("/")
    public List<String> home() {
        return List.of("Welcome", "to", "the", "homepage");
    }

    @GetMapping("/toto")
    public Products products(@RequestParam(value = "name") String name) {
        return new Products(1, String.format(template, name));
    }

    @GetMapping("/product")
    public Products OneProduct(@RequestParam(value = "id") String id) {
        return new Products(2, "Test");
    }

        @Autowired // This means to get the bean called userRepository
        // Which is auto-generated by Spring, we will use it to handle the data
        private UsersRepository userRepository;

        @PostMapping(path = "/add") // Map ONLY POST Requests
        public @ResponseBody String addNewUser(@RequestParam String name
                , @RequestParam String email) {
            // @ResponseBody means the returned String is the response, not a view name
            // @RequestParam means it is a parameter from the GET or POST request

            Users n = new Users();
            n.setName(name);
            n.setEmail(email);
            userRepository.save(n);
            return "Saved";
        }

        @GetMapping(path = "/all")
        public @ResponseBody Iterable<Users> getAllUsers() {
            // This returns a JSON or XML with the users
            return userRepository.findAll();
        }

    }
